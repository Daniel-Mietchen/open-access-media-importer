#!/usr/bin/env python
# -*- coding: utf-8 -*-

from os import path
from sys import argv, stderr

import csv
# csv.field_size_limit must be reset according to
# <http://lethain.com/handling-very-large-csv-and-xml-files-in-python/>
csv.field_size_limit(999999999)

import wikitools

from helpers import template

try:
    action = argv[1]
    target = argv[2]
except IndexError:  # no arguments given
    stderr.write("""
oa-put – Open Access Importer upload operations

usage:  oa-put upload-media [source]

""")
    exit(1)

try:
    assert(action in ['upload-media'])
except AssertionError:  # invalid action
    stderr.write("Unknown action “%s”.\n" % action)
    exit(2)

try:
    exec "from sources import %s as source_module" % target
except ImportError:  # invalid source
    stderr.write("Unknown source “%s”.\n" % target)
    exit(3)

import config

if action == 'upload-media':
    wiki = wikitools.wiki.Wiki(config.api_url)
    wiki.login(username=config.username, password=config.password)

    metadata_path = config.get_metadata_refined_source_path(target)
    converted_cache_path = path.join(metadata_path, 'converted_cache')
    with open(converted_cache_path, 'r') as converted_cache:
        reader = csv.reader(converted_cache)
        for row in reader:
            filename = row[14]
            wiki_filename = path.split(filename)[-1]
            if (path.getsize(filename) == 0):
                continue
            wiki_file = wikitools.wikifile.File(wiki=wiki, title=wiki_filename)
            wiki_file.upload(
                fileobj = open(filename, 'r'),
                comment = 'Uploaded with the Open Access Media Importer.'
            )
            authors = row[1]
            article_title = row[2]
            journal_title = row[4]
            date = row[5]
            article_url = row[6]
            license_url = row[7]
            rights_holder = row[8]
            label = row[9]
            caption = row[10]
            page = wikitools.Page(wiki, "File:" + wiki_filename, followRedir=True)
            page_template = template.page(authors, article_title, journal_title, \
                date, article_url, license_url, rights_holder, label, \
                caption)
            page.edit(text=page_template)
            stderr.write("“%s” uploaded to <%s>.\n" % \
                             (filename, config.api_url))
