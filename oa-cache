#!/usr/bin/env python
# -*- coding: utf-8 -*-

from os import listdir, path
from sys import argv, stderr, stdout

import csv
# csv.field_size_limit must be reset according to
# <http://lethain.com/handling-very-large-csv-and-xml-files-in-python/>
csv.field_size_limit(999999999)

import errno

try:
    action = argv[1]
    target = argv[2]
except IndexError:
    stderr.write("""
oa-cache – Open Access Importer local operations

usage:  oa-cache convert-media [source] |
        oa-cache find-media [source] |
        oa-cache list-articles [source]

""")
    exit(1)

try:
    assert(action in ['convert-media', 'find-media', 'list-articles'])
except AssertionError:  # invalid action
    stderr.write('Unknown action “%s”.\n' % action)
    exit(2)

try:
    exec "from sources import %s as source_module" % target
except ImportError:  # invalid source
    stderr.write("Unknown source “%s”.\n" % target)
    exit(3)

import config

from helpers import tar

if action == 'convert-media':
    for source_name in config.sources.keys():
        config.get_metadata_refined_source_path(source_name)

if action == 'list-articles':
    csv_writer = csv.writer(stdout)
    # categories based on:
    # “Citation Rules with Examples for Journal Articles on the Internet”
    # <http://www.ncbi.nlm.nih.gov/books/NBK7281/#A55596>
    csv_writer.writerow([
        'Authors',
        'Article Title',
        'Article Abstract',  # not part of citation rules, but useful
        'Journal Title',
        'Date of Publication',
        'Available from',
        'License',  # also not part of citation rules
        'Copyright Holder'  # same here
    ])
    source_path = config.get_metadata_raw_source_path(target)
    for result in source_module.list_articles(source_path):
        dataset = [item.encode('utf-8') for item in
            [
                result['article-contrib-authors'],
                result['article-title'],
                result['article-abstract'],
                result['journal-title'],
                result['article-date'],
                result['article-url'],
                result['article-license-url'],
                result['article-copyright-holder']
            ]
            if 'encode' in dir(item)
            # I have no idea why some results have no encode methods
        ]
        try:
            csv_writer.writerow(dataset)
        except IOError, e:
            if e.errno == errno.EPIPE:
                exit(0)  # broken pipe, exit normally
            else:
                raise

if action == 'find-media':
    for source_name in config.sources.keys():
        source = config.sources[source_name]
        if source_name == 'pubmed':
            metadata_raw_source_path = config.get_metadata_raw_source_path(source_name)
            listing = listdir(metadata_raw_source_path)
            for filename in listing:
                tar.find_media(
                    path.join(metadata_raw_source_path, filename),
                    config.get_metadata_refined_source_path(source_name)
                )
